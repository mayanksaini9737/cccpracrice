<?php
$customer = $this->getCustomerDetails();
$address = $this->customerAddress()->getData();
?>

<div class="address-show">
    <?php if (!empty ($address)): ?>
        <?php foreach ($address as $addValue): ?>
            <div id="asdasdasdasd" class="address-cards"
                data-json='{"customer":"<?php echo $addValue->getCustomerId(); ?>","billing_address":"<?php echo $addValue->getBillingAddress(); ?>","billing_city":"<?php echo $addValue->getBillingCity(); ?>","billing_region":"<?php echo $addValue->getBillingRegion(); ?>","billing_country":"<?php echo $addValue->getBillingCountry(); ?>","billing_phone":"<?php echo $addValue->getBillingPhone(); ?>"}'>
                <p>Address :
                    <?php echo $addValue->getBillingAddress() ?>
                </p>
                <p>City :
                    <?php echo $addValue->getBillingCity() ?>
                </p>
                <p>Region :
                    <?php echo $this->getRegionName($addValue->getBillingRegion());  ?>
                </p>
                <p>Country :
                    <?php echo $this->getCountryName($addValue->getBillingCountry());  ?>
                </p>
                <p>Phone No:
                    <?php echo $addValue->getBillingPhone() ?>
                </p>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>
</div>

<script type="text/javascript">

    $('.address-cards').each((i, e) => {
        $('.address-cards').each((i, e) => {
            console.log($(e).attr('data-json'))
            $(e).click(() => {
                var _data = JSON.parse($(e).attr('data-json'))
                for (var key in _data) {
                    if (_data.hasOwnProperty(key)) {
                        $('#' + key).val(_data[key]);
                        if (key === 'billing_region') {
                            updateBillingCountries(_data[key]); // Call function to update billing countries based on region
                        }
                    }
                }
            });
        });

        // Function to update billing countries based on region
        function updateBillingCountries(regionId) {
            var countrySelect = document.getElementById("billing_country");
            var countries = <?php echo json_encode($this->getAllCountries()); ?>;

            countrySelect.innerHTML = "";

            var regionCountries = countries[regionId];
            var defaultOption = document.createElement("option");
            defaultOption.text = "-- Select Country --";
            countrySelect.add(defaultOption);

            for (var countryName in regionCountries) {
                var option = document.createElement("option");
                option.value = regionCountries[countryName];
                option.text = countryName;
                countrySelect.add(option);
            }
        }
    })
</script>

<div class="form-checkout" id="formContainer">
    <!-- <h1> Checkout: </h1> -->

    <form method="post" action="<?php echo $this->getUrl('sales/quote/checkout') ?>">
        <input type="hidden" value="<?php echo $customer->getCustomerId(); ?>" name="address[customer_id]">
        <input type="hidden" value="<?php echo $customer->getCustomerEmail(); ?>" name="address[email]">

        <h3>Billing address</h3>

        <div class="form-field">
            <label for="billing_address">Billing Address:</label>
            <input type="text" id="billing_address" name="address[billing_address]" required>
        </div>

        <div class="form-field">
            <label for="billing_city">Billing City:</label>
            <input type="text" id="billing_city" name="address[billing_city]" onchange="copyBillingToShipping()"
                required>
        </div>

        <div class="form-field">
            <label for="billing_region">Billing Region:</label>
            <select name="address[billing_region]" id="billing_region" onchange="updateBillingCountries()" required>
                <?php foreach ($this->getAllRegions() as $key => $value): ?>
                    <option value="<?php echo $key ?>">
                        <?php echo $value ?>
                    </option>
                <?php endforeach; ?>
            </select>
        </div>

        <div class="form-field">
            <label for="billing_country">Billing Country:</label>
            <select name="address[billing_country]" id="billing_country" required></select>
        </div>

        <div class="form-field">
            <label for="billing_phone">Billing Phone:</label>
            <input type="tel" id="billing_phone" name="address[billing_phone]" required pattern="[0-9]{10}"
                title="Please enter a 10-digit phone number">
        </div>

        <h3>Shipping address</h3>

        <div class="form-field check-box">
            <input type="checkbox" id="same_as_billing" onclick="copyBillingToShipping()"
                class="checkbox-same-as-billing">
            <label for="same_as_billing" class="label-same-as-billing">Same as Billing</label>
        </div>

        <div class="form-field">
            <label for="shipping_address">Shipping Address:</label>
            <input type="text" id="shipping_address" name="address[shipping_address]" required>
        </div>

        <div class="form-field">
            <label for="shipping_city">Shipping City:</label>
            <input type="text" id="shipping_city" name="address[shipping_city]" required>
        </div>

        <div class="form-field">
            <label for="shipping_region">Shipping Region:</label>
            <select name="address[shipping_region]" id="shipping_region" onchange="updateShippingCountries()" required>
                <?php foreach ($this->getAllRegions() as $key => $value): ?>
                    <option value="<?php echo $key ?>">
                        <?php echo $value ?>
                    </option>
                <?php endforeach; ?>
            </select>
        </div>

        <div class="form-field">
            <label for="shipping_country">Shipping Country:</label>
            <select name="address[shipping_country]" id="shipping_country" required></select>
        </div>

        <div class="form-field">
            <label for="shipping_phone">Shipping Phone:</label>
            <input type="tel" id="shipping_phone" name="address[shipping_phone]" required pattern="[0-9]{10}"
                title="Please enter a 10-digit phone number">
        </div>

        <h3>Payment</h3>

        <div class="form-field">
            <label for="payment_method">Payment Method:</label>
            <select name="payment[payment_method]" id="payment_method" required onchange="toggleCardInput()">
                <?php foreach($this->getPaymentMethods() as $key=>$text): ?>
                    <option value="<?php echo $key; ?>"><?php echo $text; ?></option>
                <?php endforeach; ?>
            </select>
        </div>

        <div class="form-field" id="cardInputField" style="display: none;">
            <label for="card_number">Card Number:</label>
            <input type="tel" id="card_number" name="payment[card_number]" pattern="[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}"
                oninput="limitCardNumber()">
            <span id="cardNumberError" style="color: red; display: none;">Please enter the card number in the format
                XXXX-XXXX-XXXX-XXXX</span>
        </div>

        <h3>Shipping</h3>

        <div class="form-field">
            <label for="shipping_method">Shipping Method:</label>
            <select name="shipping" id="shipping_method" required >
                <?php foreach($this->getShippingMethods() as $key=>$text): ?>
                    <option value="<?php echo $key; ?>"><?php echo $text; ?></option>
                <?php endforeach; ?>
            </select>
        </div>

        <button class="button-submit" type="submit">Place Order</button>
    </form>
</div>

<script>

    function updateBillingCountries() {
        var regionSelect = document.getElementById("billing_region");
        var countrySelect = document.getElementById("billing_country");
        var countries = <?php echo json_encode($this->getAllCountries()); ?>;

        countrySelect.innerHTML = "";

        var regionId = regionSelect.value;
        var regionCountries = countries[regionId];
        var defaultOption = document.createElement("option");
        defaultOption.text = "-- Select Country --";
        countrySelect.add(defaultOption);

        for (var countryName in regionCountries) {
            var option = document.createElement("option");
            option.value = regionCountries[countryName];
            option.text = countryName;
            countrySelect.add(option);
        }
    }

    function updateShippingCountries() {
        var regionSelect = document.getElementById("shipping_region");
        var countrySelect = document.getElementById("shipping_country");
        var countries = <?php echo json_encode($this->getAllCountries()); ?>;

        countrySelect.innerHTML = "";

        var regionId = regionSelect.value;
        var regionCountries = countries[regionId];
        var defaultOption = document.createElement("option");
        defaultOption.text = "-- Select Country --";
        countrySelect.add(defaultOption);

        for (var countryName in regionCountries) {
            var option = document.createElement("option");
            option.value = regionCountries[countryName];
            option.text = countryName;
            countrySelect.add(option);
        }
    }

    document.getElementById("billing_region").addEventListener("change", updateBillingCountries);
    document.getElementById("shipping_region").addEventListener("change", updateShippingCountries);

    updateBillingCountries();
    updateShippingCountries();


    function toggleCardInput() {
        var paymentMethod = document.getElementById("payment_method").value;
        var cardInputField = document.getElementById("cardInputField");

        if (paymentMethod === "debit_card" || paymentMethod === "credit_card") {
            cardInputField.style.display = "block";
        } else {
            cardInputField.style.display = "none";
        }
    }

    function limitCardNumber() {
        var cardNumberInput = document.getElementById("card_number");
        var formattedValue = cardNumberInput.value.replace(/[^\d-]/g, '');
        var formattedNumber = formattedValue.replace(/(\d{4})(?=\d)/g, '$1-');
        cardNumberInput.value = formattedNumber;

        if (/^\d{4}-\d{4}-\d{4}-\d{4}$/.test(formattedNumber)) {
            document.getElementById("cardNumberError").style.display = "none";
        } else {
            document.getElementById("cardNumberError").style.display = "block";
        }
    }
</script>


<script>
    function copyBillingToShipping() {
        if (document.getElementById('same_as_billing').checked) {
            document.getElementById('shipping_address').value = document.getElementById('billing_address').value;
            document.getElementById('shipping_city').value = document.getElementById('billing_city').value;
            document.getElementById('shipping_region').value = document.getElementById('billing_region').value;

            // Get the selected region ID
            var selectedRegionId = document.getElementById('billing_region').value;
            var selectedCountryId = document.getElementById('billing_country').value;
            function updateShippingCountries(selectedRegionId, selectedCountryId) {
                var countrySelect = document.getElementById("shipping_country");
                var countries = <?php echo json_encode($this->getAllCountries()); ?>;

                countrySelect.innerHTML = "";

                var regionCountries = countries[selectedRegionId];
                var defaultOption = document.createElement("option");
                defaultOption.text = "-- Select Country --";
                countrySelect.add(defaultOption);

                for (var countryName in regionCountries) {
                    var option = document.createElement("option");
                    option.value = regionCountries[countryName];
                    option.text = countryName;
                    if (regionCountries[countryName] == selectedCountryId) {
                        option.selected = true; // Set selected attribute for the matching country
                    }
                    countrySelect.add(option);
                }
            }
            updateShippingCountries(selectedRegionId, selectedCountryId);
            document.getElementById('shipping_country').value = selectedCountryId;

            document.getElementById('shipping_phone').value = document.getElementById('billing_phone').value;
        } else {
            document.getElementById('shipping_address').value = '';
            document.getElementById('shipping_city').value = '';
            document.getElementById('shipping_region').value = '';
            document.getElementById('shipping_country').value = '';
            document.getElementById('shipping_phone').value = '';
        }
    }
</script>